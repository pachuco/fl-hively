Done:
-Precalculated waveform generator

Todo:
-Everything else
-Get license.txt
-Turn everything that is public into protected and make a front_panel class
-Synchro class(animation can be synchronised to music events)
-Optimisation

Considered optimisations:
-compact Tracks[][] into single array and use offset multiplication instead of array nesting
-dynamically allocate Tracks[] instead of using fixed array
-tidy up the code



// Class quickmap; pointer handling decisions go here
//
// Suggested way would be declaring vectors with the pointed structures in hvl_tune and turning
//the pointers themselves into uint offsets.
// Without memory pre-allocation, we push() stuff into the vectors.

hvl_envelope

hvl_instrument
    hvl_envelope
    hvl_plist                   //Seemed odd at first; this is where the instrument macro sits

hvl_plist
    *hvl_plsentry               //Becomes vector

hvl_plsentry

hvl_position

hvl_step

hvl_tune
    *hvl_position               //Vector.<hvl_position>   malloc_positions()
    *hvl_instrument             //Vector.<hvl_instrument> malloc_instruments()
    hvl_step[256][64]
    hvl_voice[MAX_CHANNELS]
    ------
    *int8 ht_WaveformTab        //Vector.<uint>           uint offsets
    *uint16 ht_Subsongs         //Vector.<uint>           malloc_subsongs()     //TODO: check usage
    
hvl_voice
    hvl_envelope
    *hvl_instrument             //Already in hvl_tune;        becomes reference
    *hvl_plist                  //Already in hvl_instrument;  becomes reference
    ------
    *int8 vc_AudioPointer
    *int8 vc_AudioSource
    *int8 vc_MixSource
    *int8 vc_RingMixSource
    *int8 vc_RingAudioSource
    
--------------------------------------------
Things that might/will explode:
-we have a lot of 'if( myint )' or 'if( *mypoint )' in here. Pointers are commonly set as either NULL or 0.
    Unfortunatelly, these pointers tend to be converted to offsets and 0 is a valid offset.
    We would need to overhaul pointy stuff to make use of uint.MAX_VALUE.
-ht_WaveformTab[] is in a sorry state. Maybe we should convert it to a Vector.<Vector.<int>>